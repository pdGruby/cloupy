<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="035fc70b-1e45-4287-a3a7-659bedf72031" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/diagrams/walter_lieth.py" beforeDir="false" afterPath="$PROJECT_DIR$/diagrams/walter_lieth.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1s53TggVXepuH0naJPWYDk1orve" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="035fc70b-1e45-4287-a3a7-659bedf72031" name="Default Changelist" comment="" />
      <created>1620148632349</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1620148632349</updated>
    </task>
    <task id="LOCAL-00001" summary="refactor: Change the directory of saving global DataFrame for cloudy and change the name of method in cloudy.WalterLieth class&#10;&#10;Global DataFrame for cloudy now is saved in the main cloudy's directory (it used to be saved in the directory where cloudy was imported). 'download_data' method in cloudy.WalterLieth diagram changes its name to 'd_imgw_data'.">
      <created>1631744553314</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1631744553314</updated>
    </task>
    <task id="LOCAL-00002" summary="refactor: Change the name of method in cloudy.WalterLieth class (new name is d_imgw_coordinates).&#10;&#10;'download_coordinates' method name changed to 'd_imgw_coordinates'.">
      <created>1631745791839</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1631745791839</updated>
    </task>
    <task id="LOCAL-00003" summary="fix: Change the path to WMO stations data in a function.&#10;&#10;Function 'look_for_the_nearest_station' in climex_scraping.py looked for the file with WMO stations' data in the directory in which cloudy was imported. Now it looks for it in the main directory of cloudy.">
      <created>1631746872952</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1631746872952</updated>
    </task>
    <task id="LOCAL-00004" summary="refactor/feat: Use list comprehension in specific cases in climex_scraping.py/Return a station's elevation in d_wmo_data function&#10;&#10;The bad way of creating lists based on existing lists was applied (now list comprehension is applied)/Now d_wmo_data function returns also an elevation with latitude and longitude.">
      <created>1631749018764</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1631749018764</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: Add new method for downloading meteorological data from WMO website in WalterLieth class.&#10;&#10;New method for WalterLieth class in walter_lieth.py added. Method is primal and has not been tested yet, so some bugs may occur.">
      <created>1631751340346</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1631751340346</updated>
    </task>
    <task id="LOCAL-00006" summary="fix: Fix the bug which occurs for specific stations with lack of data for temp_max and temp_min (in WalterLieth method for downloading WMO data)&#10;&#10;The section of the code which helps to handle with lack of unrequired data parameters (temp_max and temp_min) used to return errors. The problem was with creating a list of Nones values which length was the same as DataFrame columns - [None] should have been multiplied by LENGTH of the data.index, not data.index itself.">
      <created>1631806483865</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1631806483865</updated>
    </task>
    <task id="LOCAL-00007" summary="feat: Check if downloaded data by 'd_wmo_data' method in WalterLieth class does not contain a column with only None values&#10;&#10;If downloaded data contains such column and meteorological element is not required for drawing (temp_max, temp_min), then warn user. If downloaded data contains such column and meteorological element is required for drawing (temp, preci), raise AttributeError and inform user what the problem is.">
      <created>1631811493145</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1631811493145</updated>
    </task>
    <task id="LOCAL-00008" summary="feat/fix: Add 'station_name_is_wmo_id' argument to 'return_wmoid_or_coord' function in climex_scraping.py/Do not replicate input requests for stations which do not have unique name.&#10;&#10;In 'return_wmoid_or_coord' new argument allows to search for a specific station by it's unique WMO ID code. New argument is useful when a specific station is needed couple of times - it avoids replicating input requests for index when more than one station with the specific name were found. New argument can be set to True and then WMO ID code can be input in 'station_name'/cloudy used to replicate input requests for indexes in WalterLieth method (d_imgw_data) when there were more stations with exactly the same name in WMO database. Now when the station is chosen once, WalterLieth's method remembers station's WMO ID code which is unique. If WalterLieth's method needs to use again 'return_wmoid_or_coord' function from climex_scraping.py, it uses remembered unique WMO ID code, so the user is not obligated to repeat index input from 'return_wmoid_or_coord' function.">
      <created>1631814040945</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1631814040945</updated>
    </task>
    <task id="LOCAL-00009" summary="feat: Check years in downloaded data by 'd_wmo_data' method in WalterLieth class with the years in WalterLieth.years_range. If any difference, then change WalterLieth.years_range&#10;&#10;New argument in 'd_wmo_data' method allows to check years in downloaded data with years set in WalterLieth.years_range. New method is called 'check_years' and is set to True by default.">
      <created>1632175599467</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1632175599467</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: Do not require to set 'years_range' in WalterLieth class.&#10;&#10;Now 'years_range' is set to None by default, so it is not positional argument. If 'years_range' is None, then 'WalterLieth.draw' method will not draw years' text in the right top corner.">
      <created>1632178027887</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1632178027887</updated>
    </task>
    <task id="LOCAL-00011" summary="fix: Delete global DataFrame file in the main cloudy directory every time user imports cloudy.&#10;&#10;The path for deleting file was not absolute, so __init__.py tried to delete file from local directory (where cloudy was imported). Now __init__.py deletes the global DataFrame file from the main cloudy directory.">
      <created>1632178333214</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1632178333214</updated>
    </task>
    <task id="LOCAL-00012" summary="fix: Raise an exception when 'pd_DataFrame' argument in cloudy.set_global_df() function is not pandas.DataFrame object.&#10;&#10;if not isinstance(type(pd_DataFrame), type(pd.DataFrame)) was always True, so the exception couldn't be raised. The solution was to remove type() function.">
      <created>1632180132744</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1632180132744</updated>
    </task>
    <option name="localTasksCounter" value="13" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="refactor: Change the directory of saving global DataFrame for cloudy and change the name of method in cloudy.WalterLieth class&#10;&#10;Global DataFrame for cloudy now is saved in the main cloudy's directory (it used to be saved in the directory where cloudy was imported). 'download_data' method in cloudy.WalterLieth diagram changes its name to 'd_imgw_data'." />
    <MESSAGE value="refactor: Change the name of method in cloudy.WalterLieth class (new name is d_imgw_coordinates).&#10;&#10;'download_coordinates' method name changed to 'd_imgw_coordinates'." />
    <MESSAGE value="fix: Change the path to WMO stations data in a function.&#10;&#10;Function 'look_for_the_nearest_station' in climex_scraping.py looked for the file with WMO stations' data in the directory in which cloudy was imported. Now it looks for it in the main directory of cloudy." />
    <MESSAGE value="refactor/feat: Use list comprehension in specific cases in climex_scraping.py/Return a station's elevation in d_wmo_data function&#10;&#10;The bad way of creating lists based on existing lists was applied (now list comprehension is applied)/Now d_wmo_data function returns also an elevation with latitude and longitude." />
    <MESSAGE value="feat: Add new method for downloading meteorological data from WMO website in WalterLieth class.&#10;&#10;New method for WalterLieth class in walter_lieth.py added. Method is primal and has not been tested yet, so some bugs may occur." />
    <MESSAGE value="fix: Fix the bug which occurs for specific stations with lack of data for temp_max and temp_min (in WalterLieth method for downloading WMO data)&#10;&#10;The section of the code which helps to handle with lack of unrequired data parameters (temp_max and temp_min) used to return errors. The problem was with creating a list of Nones values which length was the same as DataFrame columns - [None] should have been multiplied by LENGTH of the data.index, not data.index itself." />
    <MESSAGE value="feat: Check if downloaded data by 'd_wmo_data' method in WalterLieth class does not contain a column with only None values&#10;&#10;If downloaded data contains such column and meteorological element is not required for drawing (temp_max, temp_min), then warn user. If downloaded data contains such column and meteorological element is required for drawing (temp, preci), raise AttributeError and inform user what the problem is." />
    <MESSAGE value="feat/fix: Add 'station_name_is_wmo_id' argument to 'return_wmoid_or_coord' function in climex_scraping.py/Do not replicate input requests for stations which do not have unique name.&#10;&#10;In 'return_wmoid_or_coord' new argument allows to search for a specific station by it's unique WMO ID code. New argument is useful when a specific station is needed couple of times - it avoids replicating input requests for index when more than one station with the specific name were found. New argument can be set to True and then WMO ID code can be input in 'station_name'/cloudy used to replicate input requests for indexes in WalterLieth method (d_imgw_data) when there were more stations with exactly the same name in WMO database. Now when the station is chosen once, WalterLieth's method remembers station's WMO ID code which is unique. If WalterLieth's method needs to use again 'return_wmoid_or_coord' function from climex_scraping.py, it uses remembered unique WMO ID code, so the user is not obligated to repeat index input from 'return_wmoid_or_coord' function." />
    <MESSAGE value="feat: Check years in downloaded data by 'd_wmo_data' method in WalterLieth class with the years in WalterLieth.years_range. If any difference, then change WalterLieth.years_range&#10;&#10;New argument in 'd_wmo_data' method allows to check years in downloaded data with years set in WalterLieth.years_range. New method is called 'check_years' and is set to True by default." />
    <MESSAGE value="feat: Do not require to set 'years_range' in WalterLieth class.&#10;&#10;Now 'years_range' is set to None by default, so it is not positional argument. If 'years_range' is None, then 'WalterLieth.draw' method will not draw years' text in the right top corner." />
    <MESSAGE value="fix: Delete global DataFrame file in the main cloudy directory every time user imports cloudy.&#10;&#10;The path for deleting file was not absolute, so __init__.py tried to delete file from local directory (where cloudy was imported). Now __init__.py deletes the global DataFrame file from the main cloudy directory." />
    <MESSAGE value="fix: Raise an exception when 'pd_DataFrame' argument in cloudy.set_global_df() function is not pandas.DataFrame object.&#10;&#10;if not isinstance(type(pd_DataFrame), type(pd.DataFrame)) was always True, so the exception couldn't be raised. The solution was to remove type() function." />
    <option name="LAST_COMMIT_MESSAGE" value="fix: Raise an exception when 'pd_DataFrame' argument in cloudy.set_global_df() function is not pandas.DataFrame object.&#10;&#10;if not isinstance(type(pd_DataFrame), type(pd.DataFrame)) was always True, so the exception couldn't be raised. The solution was to remove type() function." />
  </component>
  <component name="WindowStateProjectService">
    <state x="68" y="126" key="CommitChangelistDialog2" timestamp="1632180132047">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="68" y="126" key="CommitChangelistDialog2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632180132047" />
    <state x="92" y="92" width="1736" height="856" key="DiffContextDialog" timestamp="1631745887419">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="92" y="92" width="1736" height="856" key="DiffContextDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1631745887419" />
    <state x="552" y="253" key="Vcs.Push.Dialog.v2" timestamp="1632180134506">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="552" y="253" key="Vcs.Push.Dialog.v2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632180134506" />
    <state x="536" y="413" key="com.intellij.ide.util.TipDialog" timestamp="1632174934282">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="536" y="413" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632174934282" />
    <state x="2389" y="401" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1680.1010@1920.0.1680.1010" timestamp="1631805091844" />
    <state x="769" y="437" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1631745804664">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="769" y="437" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1631745804664" />
  </component>
</project>