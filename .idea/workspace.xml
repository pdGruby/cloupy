<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="035fc70b-1e45-4287-a3a7-659bedf72031" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/test/test_unittest/test_walter_lieth.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/test_unittest/test_unittest_imgw.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/test_unittest/test_unittest_imgw.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1s53TggVXepuH0naJPWYDk1orve" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Python\Lib\site-packages\cloudy\test\test_unittest" />
      <recent name="C:\Python\Lib\site-packages\cloudy\test\test_integration" />
      <recent name="C:\Python\Lib\site-packages\cloudy\test" />
      <recent name="C:\Python\Lib\site-packages\cloudy\test\unittesting" />
      <recent name="C:\Python\Lib\site-packages\cloudy\test\integration testing" />
    </key>
  </component>
  <component name="RunManager" selected="Python.test_integration_wmo">
    <configuration name="test_imgw" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="cloudy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="C:\Python\Lib\site-packages\cloudy\test\test_unittest\test_imgw.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="test_integration_wmo" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="cloudy" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test/test_integration" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/test/test_integration/test_integration_wmo.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.test_integration_wmo" />
        <item itemvalue="Python.test_imgw" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="035fc70b-1e45-4287-a3a7-659bedf72031" name="Default Changelist" comment="" />
      <created>1620148632349</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1620148632349</updated>
    </task>
    <task id="LOCAL-00001" summary="refactor: Change the directory of saving global DataFrame for cloudy and change the name of method in cloudy.WalterLieth class&#10;&#10;Global DataFrame for cloudy now is saved in the main cloudy's directory (it used to be saved in the directory where cloudy was imported). 'download_data' method in cloudy.WalterLieth diagram changes its name to 'd_imgw_data'.">
      <created>1631744553314</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1631744553314</updated>
    </task>
    <task id="LOCAL-00002" summary="refactor: Change the name of method in cloudy.WalterLieth class (new name is d_imgw_coordinates).&#10;&#10;'download_coordinates' method name changed to 'd_imgw_coordinates'.">
      <created>1631745791839</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1631745791839</updated>
    </task>
    <task id="LOCAL-00003" summary="fix: Change the path to WMO stations data in a function.&#10;&#10;Function 'look_for_the_nearest_station' in climex_scraping.py looked for the file with WMO stations' data in the directory in which cloudy was imported. Now it looks for it in the main directory of cloudy.">
      <created>1631746872952</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1631746872952</updated>
    </task>
    <task id="LOCAL-00004" summary="refactor/feat: Use list comprehension in specific cases in climex_scraping.py/Return a station's elevation in d_wmo_data function&#10;&#10;The bad way of creating lists based on existing lists was applied (now list comprehension is applied)/Now d_wmo_data function returns also an elevation with latitude and longitude.">
      <created>1631749018764</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1631749018764</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: Add new method for downloading meteorological data from WMO website in WalterLieth class.&#10;&#10;New method for WalterLieth class in walter_lieth.py added. Method is primal and has not been tested yet, so some bugs may occur.">
      <created>1631751340346</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1631751340346</updated>
    </task>
    <task id="LOCAL-00006" summary="fix: Fix the bug which occurs for specific stations with lack of data for temp_max and temp_min (in WalterLieth method for downloading WMO data)&#10;&#10;The section of the code which helps to handle with lack of unrequired data parameters (temp_max and temp_min) used to return errors. The problem was with creating a list of Nones values which length was the same as DataFrame columns - [None] should have been multiplied by LENGTH of the data.index, not data.index itself.">
      <created>1631806483865</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1631806483865</updated>
    </task>
    <task id="LOCAL-00007" summary="feat: Check if downloaded data by 'd_wmo_data' method in WalterLieth class does not contain a column with only None values&#10;&#10;If downloaded data contains such column and meteorological element is not required for drawing (temp_max, temp_min), then warn user. If downloaded data contains such column and meteorological element is required for drawing (temp, preci), raise AttributeError and inform user what the problem is.">
      <created>1631811493145</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1631811493145</updated>
    </task>
    <task id="LOCAL-00008" summary="feat/fix: Add 'station_name_is_wmo_id' argument to 'return_wmoid_or_coord' function in climex_scraping.py/Do not replicate input requests for stations which do not have unique name.&#10;&#10;In 'return_wmoid_or_coord' new argument allows to search for a specific station by it's unique WMO ID code. New argument is useful when a specific station is needed couple of times - it avoids replicating input requests for index when more than one station with the specific name were found. New argument can be set to True and then WMO ID code can be input in 'station_name'/cloudy used to replicate input requests for indexes in WalterLieth method (d_imgw_data) when there were more stations with exactly the same name in WMO database. Now when the station is chosen once, WalterLieth's method remembers station's WMO ID code which is unique. If WalterLieth's method needs to use again 'return_wmoid_or_coord' function from climex_scraping.py, it uses remembered unique WMO ID code, so the user is not obligated to repeat index input from 'return_wmoid_or_coord' function.">
      <created>1631814040945</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1631814040945</updated>
    </task>
    <task id="LOCAL-00009" summary="feat: Check years in downloaded data by 'd_wmo_data' method in WalterLieth class with the years in WalterLieth.years_range. If any difference, then change WalterLieth.years_range&#10;&#10;New argument in 'd_wmo_data' method allows to check years in downloaded data with years set in WalterLieth.years_range. New method is called 'check_years' and is set to True by default.">
      <created>1632175599467</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1632175599467</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: Do not require to set 'years_range' in WalterLieth class.&#10;&#10;Now 'years_range' is set to None by default, so it is not positional argument. If 'years_range' is None, then 'WalterLieth.draw' method will not draw years' text in the right top corner.">
      <created>1632178027887</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1632178027887</updated>
    </task>
    <task id="LOCAL-00011" summary="fix: Delete global DataFrame file in the main cloudy directory every time user imports cloudy.&#10;&#10;The path for deleting file was not absolute, so __init__.py tried to delete file from local directory (where cloudy was imported). Now __init__.py deletes the global DataFrame file from the main cloudy directory.">
      <created>1632178333214</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1632178333214</updated>
    </task>
    <task id="LOCAL-00012" summary="fix: Raise an exception when 'pd_DataFrame' argument in cloudy.set_global_df() function is not pandas.DataFrame object.&#10;&#10;if not isinstance(type(pd_DataFrame), type(pd.DataFrame)) was always True, so the exception couldn't be raised. The solution was to remove type() function.">
      <created>1632180132744</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1632180132744</updated>
    </task>
    <task id="LOCAL-00013" summary="feat: Choose needed columns from global DataFrame by df.iloc[:, columns_order] in WalterLieth.import_global_df method.&#10;&#10;To this moment only data from the IMGW website with no structure changes could have been imported as a global DataFrame. Now it is possible to pick specific columns from global DataFrame to fit required data structure for WalterLieth.dataframe.">
      <created>1632182160505</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1632182160505</updated>
    </task>
    <task id="LOCAL-00014" summary="feat: Filter imported global data frame by station name and check if imported years fit to WalterLieth.years_range&#10;&#10;WalterLieth.import_global_df method now allows to filter data by specified station name in WalterLieth.station_name. It also allows to check if imported years from global data frame matches WalterLieth.range_years (if not, the method automatically changes it).">
      <created>1632268867147</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1632268867147</updated>
    </task>
    <task id="LOCAL-00015" summary="docs/feat: Create docstrings for new functions and methods, update and correct docstrings of the old functions, methods and classes/Allow changing acceptable range in degrees in every direction when looking for the nearest station in WMO database&#10;&#10;Docstrings were created for the new functions and methods in climex_scraping.py and walter_lieth.py. Already existing docstrings for functions, methods and classes were checked and corrected if necessary. Docstrings' structure was changed, now every docstring is consistent. Some messages for the exceptions in climex_scraping.py, walter_lieth.py and imgw.py were also corrected./Now it is possible to change acceptable distance in degrees when looking for the nearest station among the stations in WMO database. For this purpose, new argument appeared in 'look_for_the_nearest_station' function from climex_scraping.py. The methods in the WalterLieth class which use 'look_for_the_nearest_station' function were also updated and now acceptable distance can also be changed in WalterLieth methods.">
      <created>1632351718240</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1632351718240</updated>
    </task>
    <task id="LOCAL-00016" summary="fix: Return pandas.DataFrame with the same columns order as in 'elements_to_scrape' argument when scraping data for the whole country&#10;&#10;The function used to return mixed columns order in comparision to 'elements_to_scrape' argument when it downloaded data for the whole country. It turned out to be problematic while implementing the function to class methods.">
      <created>1632425941340</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1632425941340</updated>
    </task>
    <task id="LOCAL-00017" summary="docs: Add docstring for cloudy package&#10;&#10;Describe main features of cloudy and its main functions and classes.">
      <created>1632428840703</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1632428840703</updated>
    </task>
    <task id="LOCAL-00018" summary="refactor: Save global data frame only in csv file, remove 'file_format' argument from 'set_global_df' function&#10;&#10;The feature of choosing file format in which global data frame will be saved was useless.">
      <created>1632429769401</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1632429769401</updated>
    </task>
    <task id="LOCAL-00019" summary="fix: Raise exception if user passes more than one file format to 'file_formats' arguments in 'get_meteorological_data' and 'concatenate_data' functions from imgw.py. Allow passing keywords in every shape (no matter if a letter is uppercase or lowercase).&#10;&#10;The functions from imgw.py took several file formats for their 'file_format' arguments, causing data merge errors. The main purpose of these functions was to download and concatenate files with the same format. Uppercase/lowercase letters used to have an impact for filtering data frames by keywords.">
      <created>1632507949148</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1632507949149</updated>
    </task>
    <task id="LOCAL-00020" summary="fix: Do not fill periods below the 0 degree line in Walter Lieth diagram&#10;&#10;Humid/dry periods in the Walter Lieth diagram should only be drawn above the 0 degree line.">
      <created>1632689252472</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1632689252472</updated>
    </task>
    <task id="LOCAL-00021" summary="feat: Delete 'get_coordinates_and_elevation' function from imgw.py and 'd_imgw_coordinates' method from the WalterLieth class in walter_lieth.py. Add a new argument to 'get_meteorological_data' in imgw.py, which allows to get station coordinates already at this stage&#10;&#10;Downloading coordinates for the IMGW stations used to be executed with the additional function from imgw.py (the function, which used BeautifulSoup, so sometimes it was quite lengthy to get coordinates). Now it is possible to get station coordinates in 'get_meteorological_data' function. The coordinate data is retrieved from a local file, so the whole process is much faster.">
      <created>1633047153894</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1633047153894</updated>
    </task>
    <task id="LOCAL-00022" summary="fix: Add imgw_coordinates.csv file to the main directory&#10;&#10;The last commit was done without adding the essential file ('imgw_coordinates.csv'). The new feature from the previous commit for the 'get_meteorological_data' in imgw.py cannot work without this file.">
      <created>1633047508180</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1633047508180</updated>
    </task>
    <task id="LOCAL-00023" summary="feat: Add 'return_coordinates' argument to 'd_imgw_data' method in WalterLieth class&#10;&#10;Now the method uses the new feature of 'get_meteorological_data' function from imgw.py.">
      <created>1633094170629</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1633094170629</updated>
    </task>
    <task id="LOCAL-00024" summary="fix: Create files_reading_folder directory in the cloudy.scraping directory&#10;&#10;The files_reading_folder directory used to be created in the directory where cloudy was imported. From now the directory for reading files will be created inside the cloudy library.">
      <created>1633126278193</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1633126278193</updated>
    </task>
    <task id="LOCAL-00025" summary="fix: Filter by the 'keywords' argument over the 'specific_columns' argument in 'get_meteorological_data' and 'concatenate_data' functions from imgw.py&#10;&#10;Inputting both arguments used to report an error. Now, when both arguments are input, the 'keywords' argument is higher up the hierarchy, so filtering is based on it and the arguments do not interfere each other.">
      <created>1633126918236</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1633126918236</updated>
    </task>
    <task id="LOCAL-00026" summary="fix: Make keywords uppercase every time when filtering (in look_for_keywords_in_columns function from imgw.py)&#10;&#10;Now there is no difference between uppercase, lowercase and capitalized strings in 'keywords' argument. The function used to be case-sensitive, which was unnecessary.">
      <created>1633127564035</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1633127564035</updated>
    </task>
    <task id="LOCAL-00027" summary="test: Create an unit test and an integration test for the imgw.py from cloudy.scraping">
      <created>1633134046299</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1633134046299</updated>
    </task>
    <task id="LOCAL-00028" summary="test: Create an unit test for the climex_scraping.py">
      <created>1633546136814</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1633546136814</updated>
    </task>
    <task id="LOCAL-00029" summary="fix: Sort dataframe by a list, not a list inside another list. Return station, year and month columns when downloading the date for the entire country.&#10;&#10;The 'download_meteo_data' function from climex_scraping.py used to sort the order of the columns by a list inside another list, which caused errors every time the feature of the function was used. Sorting contributed to omission of the year and month columns when the dataframe was returned, so now it does not exclude the above columns.">
      <created>1633711040342</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1633711040342</updated>
    </task>
    <task id="LOCAL-00030" summary="test: Create an integration test for the climex_scraping.py">
      <created>1633734656153</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1633734656153</updated>
    </task>
    <task id="LOCAL-00031" summary="test: Create a test for concatenate_dfs function from climex_scraping.py">
      <created>1633739314778</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1633739314778</updated>
    </task>
    <task id="LOCAL-00032" summary="test: Check the internet connection before testing functions which scrape data from the IMGW database&#10;&#10;Now if there's no internet connection, the integration test for the imgw.py module will not be executed">
      <created>1633785814212</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1633785814212</updated>
    </task>
    <task id="LOCAL-00033" summary="test: Move filtering warnings above the class in the integration test for downloading data from the IMGW database&#10;&#10;The decorator pytest.mark.filterwarnings was moved above the class, so it is not multiplied in the class' methods.">
      <created>1633791347240</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1633791347240</updated>
    </task>
    <option name="localTasksCounter" value="34" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: Check years in downloaded data by 'd_wmo_data' method in WalterLieth class with the years in WalterLieth.years_range. If any difference, then change WalterLieth.years_range&#10;&#10;New argument in 'd_wmo_data' method allows to check years in downloaded data with years set in WalterLieth.years_range. New method is called 'check_years' and is set to True by default." />
    <MESSAGE value="feat: Do not require to set 'years_range' in WalterLieth class.&#10;&#10;Now 'years_range' is set to None by default, so it is not positional argument. If 'years_range' is None, then 'WalterLieth.draw' method will not draw years' text in the right top corner." />
    <MESSAGE value="fix: Delete global DataFrame file in the main cloudy directory every time user imports cloudy.&#10;&#10;The path for deleting file was not absolute, so __init__.py tried to delete file from local directory (where cloudy was imported). Now __init__.py deletes the global DataFrame file from the main cloudy directory." />
    <MESSAGE value="fix: Raise an exception when 'pd_DataFrame' argument in cloudy.set_global_df() function is not pandas.DataFrame object.&#10;&#10;if not isinstance(type(pd_DataFrame), type(pd.DataFrame)) was always True, so the exception couldn't be raised. The solution was to remove type() function." />
    <MESSAGE value="feat: Choose needed columns from global DataFrame by df.iloc[:, columns_order] in WalterLieth.import_global_df method.&#10;&#10;To this moment only data from the IMGW website with no structure changes could have been imported as a global DataFrame. Now it is possible to pick specific columns from global DataFrame to fit required data structure for WalterLieth.dataframe." />
    <MESSAGE value="feat: Filter imported global data frame by station name and check if imported years fit to WalterLieth.years_range&#10;&#10;WalterLieth.import_global_df method now allows to filter data by specified station name in WalterLieth.station_name. It also allows to check if imported years from global data frame matches WalterLieth.range_years (if not, the method automatically changes it)." />
    <MESSAGE value="docs/feat: Create docstrings for new functions and methods, update and correct docstrings of the old functions, methods and classes/Allow changing acceptable range in degrees in every direction when looking for the nearest station in WMO database&#10;&#10;Docstrings were created for the new functions and methods in climex_scraping.py and walter_lieth.py. Already existing docstrings for functions, methods and classes were checked and corrected if necessary. Docstrings' structure was changed, now every docstring is consistent. Some messages for the exceptions in climex_scraping.py, walter_lieth.py and imgw.py were also corrected./Now it is possible to change acceptable distance in degrees when looking for the nearest station among the stations in WMO database. For this purpose, new argument appeared in 'look_for_the_nearest_station' function from climex_scraping.py. The methods in the WalterLieth class which use 'look_for_the_nearest_station' function were also updated and now acceptable distance can also be changed in WalterLieth methods." />
    <MESSAGE value="fix: Return pandas.DataFrame with the same columns order as in 'elements_to_scrape' argument when scraping data for the whole country&#10;&#10;The function used to return mixed columns order in comparision to 'elements_to_scrape' argument when it downloaded data for the whole country. It turned out to be problematic while implementing the function to class methods." />
    <MESSAGE value="docs: Add docstring for cloudy package&#10;&#10;Describe main features of cloudy and its main functions and classes." />
    <MESSAGE value="refactor: Save global data frame only in csv file, remove 'file_format' argument from 'set_global_df' function&#10;&#10;The feature of choosing file format in which global data frame will be saved was useless." />
    <MESSAGE value="fix: Raise exception if user passes more than one file format to 'file_formats' arguments in 'get_meteorological_data' and 'concatenate_data' functions from imgw.py. Allow passing keywords in every shape (no matter if a letter is uppercase or lowercase).&#10;&#10;The functions from imgw.py took several file formats for their 'file_format' arguments, causing data merge errors. The main purpose of these functions was to download and concatenate files with the same format. Uppercase/lowercase letters used to have an impact for filtering data frames by keywords." />
    <MESSAGE value="fix: Do not fill periods below the 0 degree line in Walter Lieth diagram&#10;&#10;Humid/dry periods in the Walter Lieth diagram should only be drawn above the 0 degree line." />
    <MESSAGE value="feat: Delete 'get_coordinates_and_elevation' function from imgw.py and 'd_imgw_coordinates' method from the WalterLieth class in walter_lieth.py. Add a new argument to 'get_meteorological_data' in imgw.py, which allows to get station coordinates already at this stage&#10;&#10;Downloading coordinates for the IMGW stations used to be executed with the additional function from imgw.py (the function, which used BeautifulSoup, so sometimes it was quite lengthy to get coordinates). Now it is possible to get station coordinates in 'get_meteorological_data' function. The coordinate data is retrieved from a local file, so the whole process is much faster." />
    <MESSAGE value="fix: Add imgw_coordinates.csv file to the main directory&#10;&#10;The last commit was done without adding the essential file ('imgw_coordinates.csv'). The new feature from the previous commit for the 'get_meteorological_data' in imgw.py cannot work without this file." />
    <MESSAGE value="feat: Add 'return_coordinates' argument to 'd_imgw_data' method in WalterLieth class&#10;&#10;Now the method uses the new feature of 'get_meteorological_data' function from imgw.py." />
    <MESSAGE value="fix: Create files_reading_folder directory in the cloudy.scraping directory&#10;&#10;The files_reading_folder directory used to be created in the directory where cloudy was imported. From now the directory for reading files will be created inside the cloudy library." />
    <MESSAGE value="fix: Filter by the 'keywords' argument over the 'specific_columns' argument in 'get_meteorological_data' and 'concatenate_data' functions from imgw.py&#10;&#10;Inputting both arguments used to report an error. Now, when both arguments are input, the 'keywords' argument is higher up the hierarchy, so filtering is based on it and the arguments do not interfere each other." />
    <MESSAGE value="fix: Make keywords uppercase every time when filtering (in look_for_keywords_in_columns function from imgw.py)&#10;&#10;Now there is no difference between uppercase, lowercase and capitalized strings in 'keywords' argument. The function used to be case-sensitive, which was unnecessary." />
    <MESSAGE value="test: Create an unit test and an integration test for the imgw.py from cloudy.scraping" />
    <MESSAGE value="test: Create an unit test for the climex_scraping.py" />
    <MESSAGE value="fix: Sort dataframe by a list, not a list inside another list. Return station, year and month columns when downloading the date for the entire country.&#10;&#10;The 'download_meteo_data' function from climex_scraping.py used to sort the order of the columns by a list inside another list, which caused errors every time the feature of the function was used. Sorting contributed to omission of the year and month columns when the dataframe was returned, so now it does not exclude the above columns." />
    <MESSAGE value="test: Create an integration test for the climex_scraping.py" />
    <MESSAGE value="test: Create a test for concatenate_dfs function from climex_scraping.py" />
    <MESSAGE value="test: Check the internet connection before testing functions which scrape data from the IMGW database&#10;&#10;Now if there's no internet connection, the integration test for the imgw.py module will not be executed" />
    <MESSAGE value="test: Move filtering warnings above the class in the integration test for downloading data from the IMGW database&#10;&#10;The decorator pytest.mark.filterwarnings was moved above the class, so it is not multiplied in the class' methods." />
    <option name="LAST_COMMIT_MESSAGE" value="test: Move filtering warnings above the class in the integration test for downloading data from the IMGW database&#10;&#10;The decorator pytest.mark.filterwarnings was moved above the class, so it is not multiplied in the class' methods." />
  </component>
  <component name="WindowStateProjectService">
    <state x="221" y="106" width="1288" height="811" key="CommitChangelistDialog2" timestamp="1633791346526">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="221" y="106" width="1288" height="811" key="CommitChangelistDialog2/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633791346526" />
    <state x="225" y="74" width="1447" height="881" key="CommitChangelistDialog2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134045196" />
    <state x="92" y="92" width="1736" height="856" key="DiffContextDialog" timestamp="1631745887419">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="92" y="92" width="1736" height="856" key="DiffContextDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1631745887419" />
    <state x="739" y="262" key="FileChooserDialogImpl" timestamp="1633561090271">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="739" y="262" key="FileChooserDialogImpl/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633561090271" />
    <state x="739" y="262" key="FileChooserDialogImpl/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632430446362" />
    <state x="782" y="419" key="Github.CreateGistDialog" timestamp="1633047290636">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="782" y="419" key="Github.CreateGistDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633047290636" />
    <state width="1899" height="282" key="GridCell.Tab.0.bottom" timestamp="1633740065448">
      <screen x="1920" y="0" width="1440" height="860" />
    </state>
    <state width="1899" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633734015305" />
    <state width="1899" height="282" key="GridCell.Tab.0.bottom/0.0.1920.1040/1920.0.1440.860@1920.0.1440.860" timestamp="1633740065448" />
    <state width="1899" height="348" key="GridCell.Tab.0.bottom/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121635" />
    <state width="1899" height="282" key="GridCell.Tab.0.center" timestamp="1633740065447">
      <screen x="1920" y="0" width="1440" height="860" />
    </state>
    <state width="1899" height="282" key="GridCell.Tab.0.center/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633734015305" />
    <state width="1899" height="282" key="GridCell.Tab.0.center/0.0.1920.1040/1920.0.1440.860@1920.0.1440.860" timestamp="1633740065447" />
    <state width="1899" height="348" key="GridCell.Tab.0.center/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121634" />
    <state width="1899" height="282" key="GridCell.Tab.0.left" timestamp="1633740065447">
      <screen x="1920" y="0" width="1440" height="860" />
    </state>
    <state width="1899" height="282" key="GridCell.Tab.0.left/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633734015304" />
    <state width="1899" height="282" key="GridCell.Tab.0.left/0.0.1920.1040/1920.0.1440.860@1920.0.1440.860" timestamp="1633740065447" />
    <state width="1899" height="348" key="GridCell.Tab.0.left/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121634" />
    <state width="1899" height="282" key="GridCell.Tab.0.right" timestamp="1633740065447">
      <screen x="1920" y="0" width="1440" height="860" />
    </state>
    <state width="1899" height="282" key="GridCell.Tab.0.right/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633734015305" />
    <state width="1899" height="282" key="GridCell.Tab.0.right/0.0.1920.1040/1920.0.1440.860@1920.0.1440.860" timestamp="1633740065447" />
    <state width="1899" height="348" key="GridCell.Tab.0.right/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121634" />
    <state width="1899" height="348" key="GridCell.Tab.1.bottom" timestamp="1633134121635">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state width="1899" height="348" key="GridCell.Tab.1.bottom/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121635" />
    <state width="1899" height="348" key="GridCell.Tab.1.center" timestamp="1633134121635">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state width="1899" height="348" key="GridCell.Tab.1.center/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121635" />
    <state width="1899" height="348" key="GridCell.Tab.1.left" timestamp="1633134121635">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state width="1899" height="348" key="GridCell.Tab.1.left/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121635" />
    <state width="1899" height="348" key="GridCell.Tab.1.right" timestamp="1633134121635">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state width="1899" height="348" key="GridCell.Tab.1.right/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134121635" />
    <state x="785" y="231" key="RollbackChangesDialog" timestamp="1632429475265">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="785" y="231" key="RollbackChangesDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632429475265" />
    <state x="552" y="253" key="Vcs.Push.Dialog.v2" timestamp="1633791350615">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="552" y="253" key="Vcs.Push.Dialog.v2/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633791350615" />
    <state x="552" y="253" key="Vcs.Push.Dialog.v2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633134053789" />
    <state x="536" y="413" key="com.intellij.ide.util.TipDialog" timestamp="1633820011889">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="536" y="413" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633820011889" />
    <state x="2322" y="342" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1440.860@1920.0.1440.860" timestamp="1633785372221" />
    <state x="536" y="413" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633092700370" />
    <state x="2389" y="401" key="com.intellij.ide.util.TipDialog/0.0.1920.1040/1920.0.1680.1010@1920.0.1680.1010" timestamp="1633010216425" />
    <state x="606" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1633800846270">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="606" y="135" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633800846270" />
    <state x="769" y="437" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1632424096143">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="769" y="437" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1632424096143" />
    <state x="623" y="225" width="672" height="678" key="search.everywhere.popup" timestamp="1633800080038">
      <screen x="0" y="0" width="1920" height="1040" />
    </state>
    <state x="623" y="225" width="672" height="678" key="search.everywhere.popup/0.0.1920.1040/1920.0.1440.860@0.0.1920.1040" timestamp="1633800080038" />
    <state x="623" y="225" width="672" height="678" key="search.everywhere.popup/0.0.1920.1040/1920.0.1680.1010@0.0.1920.1040" timestamp="1633115248490" />
  </component>
</project>